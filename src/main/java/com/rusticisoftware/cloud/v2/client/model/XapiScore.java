/**
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0 beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * https://github.com/adlnet/xAPI-Spec/blob/1.0.2/xAPI.md#4151-score
 */
@ApiModel(description = "https://github.com/adlnet/xAPI-Spec/blob/1.0.2/xAPI.md#4151-score")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-25T23:53:11.088-05:00")
public class XapiScore   {
  @JsonProperty("scaled")
  private Double scaled = null;

  @JsonProperty("raw")
  private Double raw = null;

  @JsonProperty("min")
  private Double min = null;

  @JsonProperty("max")
  private Double max = null;

  public XapiScore scaled(Double scaled) {
    this.scaled = scaled;
    return this;
  }

   /**
   * Get scaled
   * @return scaled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getScaled() {
    return scaled;
  }

  public void setScaled(Double scaled) {
    this.scaled = scaled;
  }

  public XapiScore raw(Double raw) {
    this.raw = raw;
    return this;
  }

   /**
   * Get raw
   * @return raw
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getRaw() {
    return raw;
  }

  public void setRaw(Double raw) {
    this.raw = raw;
  }

  public XapiScore min(Double min) {
    this.min = min;
    return this;
  }

   /**
   * Get min
   * @return min
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getMin() {
    return min;
  }

  public void setMin(Double min) {
    this.min = min;
  }

  public XapiScore max(Double max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getMax() {
    return max;
  }

  public void setMax(Double max) {
    this.max = max;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XapiScore xapiScore = (XapiScore) o;
    return Objects.equals(this.scaled, xapiScore.scaled) &&
        Objects.equals(this.raw, xapiScore.raw) &&
        Objects.equals(this.min, xapiScore.min) &&
        Objects.equals(this.max, xapiScore.max);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scaled, raw, min, max);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XapiScore {\n");
    
    sb.append("    scaled: ").append(toIndentedString(scaled)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

