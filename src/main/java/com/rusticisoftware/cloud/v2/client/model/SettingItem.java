/**
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0 beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.rusticisoftware.cloud.v2.client.model.SettingMetadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * SettingItem
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-25T14:21:57.917-05:00")
public class SettingItem   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("effectiveValue")
  private String effectiveValue = null;

  /**
   * The source of this effective value, default, fallback, or the level the value was set at.
   */
  public enum EffectiveValueSourceEnum {
    DEFAULT("default"),
    
    FALLBACK("fallback"),
    
    BASE("base"),
    
    SYSTEM("system"),
    
    LEARNINGSTANDARD("learningStandard"),
    
    APPLICATION("application"),
    
    LEARNINGSTANDARDFORAPPLICATION("learningStandardForApplication"),
    
    DISPATCHDESTINATION("dispatchDestination"),
    
    COURSE("course"),
    
    DISPATCHDESTINATIONFORCOURSE("dispatchDestinationForCourse"),
    
    REGISTRATION("registration");

    private String value;

    EffectiveValueSourceEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EffectiveValueSourceEnum fromValue(String text) {
      for (EffectiveValueSourceEnum b : EffectiveValueSourceEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("effectiveValueSource")
  private EffectiveValueSourceEnum effectiveValueSource = null;

  @JsonProperty("explicitValue")
  private String explicitValue = null;

  @JsonProperty("metadata")
  private SettingMetadata metadata = null;

  public SettingItem id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SettingItem effectiveValue(String effectiveValue) {
    this.effectiveValue = effectiveValue;
    return this;
  }

   /**
   * The value of this setting that would be used if read at this level, including defaults, fallback, and values set at less specific levels.
   * @return effectiveValue
  **/
  @ApiModelProperty(example = "null", value = "The value of this setting that would be used if read at this level, including defaults, fallback, and values set at less specific levels.")
  public String getEffectiveValue() {
    return effectiveValue;
  }

  public void setEffectiveValue(String effectiveValue) {
    this.effectiveValue = effectiveValue;
  }

  public SettingItem effectiveValueSource(EffectiveValueSourceEnum effectiveValueSource) {
    this.effectiveValueSource = effectiveValueSource;
    return this;
  }

   /**
   * The source of this effective value, default, fallback, or the level the value was set at.
   * @return effectiveValueSource
  **/
  @ApiModelProperty(example = "null", value = "The source of this effective value, default, fallback, or the level the value was set at.")
  public EffectiveValueSourceEnum getEffectiveValueSource() {
    return effectiveValueSource;
  }

  public void setEffectiveValueSource(EffectiveValueSourceEnum effectiveValueSource) {
    this.effectiveValueSource = effectiveValueSource;
  }

  public SettingItem explicitValue(String explicitValue) {
    this.explicitValue = explicitValue;
    return this;
  }

   /**
   * The value of this setting that is explicitly set at this level. If not present, the setting is not specified at this level.
   * @return explicitValue
  **/
  @ApiModelProperty(example = "null", value = "The value of this setting that is explicitly set at this level. If not present, the setting is not specified at this level.")
  public String getExplicitValue() {
    return explicitValue;
  }

  public void setExplicitValue(String explicitValue) {
    this.explicitValue = explicitValue;
  }

  public SettingItem metadata(SettingMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "null", value = "")
  public SettingMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(SettingMetadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingItem settingItem = (SettingItem) o;
    return Objects.equals(this.id, settingItem.id) &&
        Objects.equals(this.effectiveValue, settingItem.effectiveValue) &&
        Objects.equals(this.effectiveValueSource, settingItem.effectiveValueSource) &&
        Objects.equals(this.explicitValue, settingItem.explicitValue) &&
        Objects.equals(this.metadata, settingItem.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, effectiveValue, effectiveValueSource, explicitValue, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    effectiveValue: ").append(toIndentedString(effectiveValue)).append("\n");
    sb.append("    effectiveValueSource: ").append(toIndentedString(effectiveValueSource)).append("\n");
    sb.append("    explicitValue: ").append(toIndentedString(explicitValue)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

