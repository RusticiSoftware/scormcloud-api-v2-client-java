/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.rusticisoftware.cloud.v2.client.model.PostBackSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * UpdateDispatchSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-09-26T11:33:06.485-05:00")
public class UpdateDispatchSchema {
  @JsonProperty("allowNewRegistrations")
  private Boolean allowNewRegistrations = null;

  @JsonProperty("instanced")
  private Boolean instanced = null;

  @JsonProperty("registrationCap")
  private Integer registrationCap = null;

  @JsonProperty("registrationCount")
  private Integer registrationCount = null;

  @JsonProperty("expirationDate")
  private OffsetDateTime expirationDate = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("notes")
  private String notes = null;

  @JsonProperty("postBack")
  private PostBackSchema postBack = null;

  public UpdateDispatchSchema allowNewRegistrations(Boolean allowNewRegistrations) {
    this.allowNewRegistrations = allowNewRegistrations;
    return this;
  }

  /**
   * If true, then new registrations can be created for this dispatch. 
   * @return allowNewRegistrations
  **/
  @ApiModelProperty(value = "If true, then new registrations can be created for this dispatch. ")
  public Boolean isAllowNewRegistrations() {
    return allowNewRegistrations;
  }

  public void setAllowNewRegistrations(Boolean allowNewRegistrations) {
    this.allowNewRegistrations = allowNewRegistrations;
  }

  public UpdateDispatchSchema instanced(Boolean instanced) {
    this.instanced = instanced;
    return this;
  }

  /**
   * If true, then a new registration instance will be created if the client LMS doesn&#39;t provide launch data for an existing one. Otherwise, the same instance will always be used for the given cmi.learner_id. 
   * @return instanced
  **/
  @ApiModelProperty(value = "If true, then a new registration instance will be created if the client LMS doesn't provide launch data for an existing one. Otherwise, the same instance will always be used for the given cmi.learner_id. ")
  public Boolean isInstanced() {
    return instanced;
  }

  public void setInstanced(Boolean instanced) {
    this.instanced = instanced;
  }

  public UpdateDispatchSchema registrationCap(Integer registrationCap) {
    this.registrationCap = registrationCap;
    return this;
  }

  /**
   * The maximum number of registrations that can be created for this dispatch, where &#39;0&#39; means &#39;unlimited registrations&#39;. 
   * @return registrationCap
  **/
  @ApiModelProperty(value = "The maximum number of registrations that can be created for this dispatch, where '0' means 'unlimited registrations'. ")
  public Integer getRegistrationCap() {
    return registrationCap;
  }

  public void setRegistrationCap(Integer registrationCap) {
    this.registrationCap = registrationCap;
  }

  public UpdateDispatchSchema registrationCount(Integer registrationCount) {
    this.registrationCount = registrationCount;
    return this;
  }

  /**
   * The current number of registrations that have been created for this dispatch. 
   * @return registrationCount
  **/
  @ApiModelProperty(value = "The current number of registrations that have been created for this dispatch. ")
  public Integer getRegistrationCount() {
    return registrationCount;
  }

  public void setRegistrationCount(Integer registrationCount) {
    this.registrationCount = registrationCount;
  }

  public UpdateDispatchSchema expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

  /**
   * The ISO 8601 TimeStamp (defaults to UTC) after which this dispatch will be disabled. An empty value will represent no expiration date. 
   * @return expirationDate
  **/
  @ApiModelProperty(value = "The ISO 8601 TimeStamp (defaults to UTC) after which this dispatch will be disabled. An empty value will represent no expiration date. ")
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public UpdateDispatchSchema enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * If true, then this dispatch can be launched. 
   * @return enabled
  **/
  @ApiModelProperty(value = "If true, then this dispatch can be launched. ")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public UpdateDispatchSchema email(String email) {
    this.email = email;
    return this;
  }

  /**
   * SCORM Cloud user e-mail associated with this dispatch. If this is not provided, it will default to the owner of the Realm. 
   * @return email
  **/
  @ApiModelProperty(value = "SCORM Cloud user e-mail associated with this dispatch. If this is not provided, it will default to the owner of the Realm. ")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UpdateDispatchSchema notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Any provided notes about this dispatch.
   * @return notes
  **/
  @ApiModelProperty(value = "Any provided notes about this dispatch.")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public UpdateDispatchSchema postBack(PostBackSchema postBack) {
    this.postBack = postBack;
    return this;
  }

  /**
   * The postback information for this Dispatch.
   * @return postBack
  **/
  @ApiModelProperty(value = "The postback information for this Dispatch.")
  public PostBackSchema getPostBack() {
    return postBack;
  }

  public void setPostBack(PostBackSchema postBack) {
    this.postBack = postBack;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDispatchSchema updateDispatchSchema = (UpdateDispatchSchema) o;
    return Objects.equals(this.allowNewRegistrations, updateDispatchSchema.allowNewRegistrations) &&
        Objects.equals(this.instanced, updateDispatchSchema.instanced) &&
        Objects.equals(this.registrationCap, updateDispatchSchema.registrationCap) &&
        Objects.equals(this.registrationCount, updateDispatchSchema.registrationCount) &&
        Objects.equals(this.expirationDate, updateDispatchSchema.expirationDate) &&
        Objects.equals(this.enabled, updateDispatchSchema.enabled) &&
        Objects.equals(this.email, updateDispatchSchema.email) &&
        Objects.equals(this.notes, updateDispatchSchema.notes) &&
        Objects.equals(this.postBack, updateDispatchSchema.postBack);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowNewRegistrations, instanced, registrationCap, registrationCount, expirationDate, enabled, email, notes, postBack);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDispatchSchema {\n");
    
    sb.append("    allowNewRegistrations: ").append(toIndentedString(allowNewRegistrations)).append("\n");
    sb.append("    instanced: ").append(toIndentedString(instanced)).append("\n");
    sb.append("    registrationCap: ").append(toIndentedString(registrationCap)).append("\n");
    sb.append("    registrationCount: ").append(toIndentedString(registrationCount)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    postBack: ").append(toIndentedString(postBack)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

