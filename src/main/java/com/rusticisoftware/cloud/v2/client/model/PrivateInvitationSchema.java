/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.rusticisoftware.cloud.v2.client.model.InvitationEmailSchema;
import com.rusticisoftware.cloud.v2.client.model.PostBackSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * PrivateInvitationSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-19T22:54:47.497-06:00")
public class PrivateInvitationSchema {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("courseId")
  private String courseId = null;

  @JsonProperty("allowLaunch")
  private Boolean allowLaunch = null;

  @JsonProperty("invitationEmail")
  private InvitationEmailSchema invitationEmail = null;

  @JsonProperty("createDate")
  private OffsetDateTime createDate = null;

  @JsonProperty("updated")
  private OffsetDateTime updated = null;

  @JsonProperty("postBack")
  private PostBackSchema postBack = null;

  @JsonProperty("expirationDate")
  private OffsetDateTime expirationDate = null;

  @JsonProperty("registrationCount")
  private Integer registrationCount = null;

  public PrivateInvitationSchema id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The invitationId for this invitation.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "The invitationId for this invitation.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PrivateInvitationSchema courseId(String courseId) {
    this.courseId = courseId;
    return this;
  }

   /**
   * Course Id for this Invitation.
   * @return courseId
  **/
  @ApiModelProperty(example = "null", value = "Course Id for this Invitation.")
  public String getCourseId() {
    return courseId;
  }

  public void setCourseId(String courseId) {
    this.courseId = courseId;
  }

  public PrivateInvitationSchema allowLaunch(Boolean allowLaunch) {
    this.allowLaunch = allowLaunch;
    return this;
  }

   /**
   * If true, then new registrations can be created for this dispatch.
   * @return allowLaunch
  **/
  @ApiModelProperty(example = "null", value = "If true, then new registrations can be created for this dispatch.")
  public Boolean getAllowLaunch() {
    return allowLaunch;
  }

  public void setAllowLaunch(Boolean allowLaunch) {
    this.allowLaunch = allowLaunch;
  }

  public PrivateInvitationSchema invitationEmail(InvitationEmailSchema invitationEmail) {
    this.invitationEmail = invitationEmail;
    return this;
  }

   /**
   * Get invitationEmail
   * @return invitationEmail
  **/
  @ApiModelProperty(example = "null", value = "")
  public InvitationEmailSchema getInvitationEmail() {
    return invitationEmail;
  }

  public void setInvitationEmail(InvitationEmailSchema invitationEmail) {
    this.invitationEmail = invitationEmail;
  }

  public PrivateInvitationSchema createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * The create date for the invitation
   * @return createDate
  **/
  @ApiModelProperty(example = "null", value = "The create date for the invitation")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public PrivateInvitationSchema updated(OffsetDateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @ApiModelProperty(example = "null", value = "")
  public OffsetDateTime getUpdated() {
    return updated;
  }

  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }

  public PrivateInvitationSchema postBack(PostBackSchema postBack) {
    this.postBack = postBack;
    return this;
  }

   /**
   * Specifies a URL for which to post activity and status data in real time as the course is completed
   * @return postBack
  **/
  @ApiModelProperty(example = "null", value = "Specifies a URL for which to post activity and status data in real time as the course is completed")
  public PostBackSchema getPostBack() {
    return postBack;
  }

  public void setPostBack(PostBackSchema postBack) {
    this.postBack = postBack;
  }

  public PrivateInvitationSchema expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The date this invitation will expire and can not be launched (formatted yyyyMMddHHmmss in UTC time).
   * @return expirationDate
  **/
  @ApiModelProperty(example = "null", value = "The date this invitation will expire and can not be launched (formatted yyyyMMddHHmmss in UTC time).")
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public PrivateInvitationSchema registrationCount(Integer registrationCount) {
    this.registrationCount = registrationCount;
    return this;
  }

   /**
   * The count of registrations for this invitation
   * @return registrationCount
  **/
  @ApiModelProperty(example = "null", value = "The count of registrations for this invitation")
  public Integer getRegistrationCount() {
    return registrationCount;
  }

  public void setRegistrationCount(Integer registrationCount) {
    this.registrationCount = registrationCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateInvitationSchema privateInvitationSchema = (PrivateInvitationSchema) o;
    return Objects.equals(this.id, privateInvitationSchema.id) &&
        Objects.equals(this.courseId, privateInvitationSchema.courseId) &&
        Objects.equals(this.allowLaunch, privateInvitationSchema.allowLaunch) &&
        Objects.equals(this.invitationEmail, privateInvitationSchema.invitationEmail) &&
        Objects.equals(this.createDate, privateInvitationSchema.createDate) &&
        Objects.equals(this.updated, privateInvitationSchema.updated) &&
        Objects.equals(this.postBack, privateInvitationSchema.postBack) &&
        Objects.equals(this.expirationDate, privateInvitationSchema.expirationDate) &&
        Objects.equals(this.registrationCount, privateInvitationSchema.registrationCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, courseId, allowLaunch, invitationEmail, createDate, updated, postBack, expirationDate, registrationCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateInvitationSchema {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    allowLaunch: ").append(toIndentedString(allowLaunch)).append("\n");
    sb.append("    invitationEmail: ").append(toIndentedString(invitationEmail)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    postBack: ").append(toIndentedString(postBack)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    registrationCount: ").append(toIndentedString(registrationCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

