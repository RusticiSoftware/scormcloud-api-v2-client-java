/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * DispatchSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-20T12:48:59.622-05:00")
public class DispatchSchema {
  @JsonProperty("destinationId")
  private String destinationId = null;

  @JsonProperty("courseId")
  private String courseId = null;

  @JsonProperty("allowNewRegistrations")
  private Boolean allowNewRegistrations = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("instanced")
  private Boolean instanced = null;

  @JsonProperty("registrationCap")
  private Integer registrationCap = null;

  @JsonProperty("registrationCount")
  private Integer registrationCount = null;

  @JsonProperty("expirationDate")
  private OffsetDateTime expirationDate = null;

  @JsonProperty("tags")
  private List<String> tags = new ArrayList<String>();

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("notes")
  private String notes = null;

  public DispatchSchema destinationId(String destinationId) {
    this.destinationId = destinationId;
    return this;
  }

   /**
   * Destination ID.
   * @return destinationId
  **/
  @ApiModelProperty(example = "null", value = "Destination ID.")
  public String getDestinationId() {
    return destinationId;
  }

  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }

  public DispatchSchema courseId(String courseId) {
    this.courseId = courseId;
    return this;
  }

   /**
   * Serialized external package ID.
   * @return courseId
  **/
  @ApiModelProperty(example = "null", value = "Serialized external package ID.")
  public String getCourseId() {
    return courseId;
  }

  public void setCourseId(String courseId) {
    this.courseId = courseId;
  }

  public DispatchSchema allowNewRegistrations(Boolean allowNewRegistrations) {
    this.allowNewRegistrations = allowNewRegistrations;
    return this;
  }

   /**
   * If true, then new registrations can be created for this dispatch. 
   * @return allowNewRegistrations
  **/
  @ApiModelProperty(example = "null", value = "If true, then new registrations can be created for this dispatch. ")
  public Boolean getAllowNewRegistrations() {
    return allowNewRegistrations;
  }

  public void setAllowNewRegistrations(Boolean allowNewRegistrations) {
    this.allowNewRegistrations = allowNewRegistrations;
  }

  public DispatchSchema enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * If false, the dispatch can not be launched.
   * @return enabled
  **/
  @ApiModelProperty(example = "null", value = "If false, the dispatch can not be launched.")
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public DispatchSchema instanced(Boolean instanced) {
    this.instanced = instanced;
    return this;
  }

   /**
   * If true, then a new registration instance will be created if the client LMS doesn't provide launch data for an existing one. Otherwise, the same instance will always be used for the given cmi.learner_id. 
   * @return instanced
  **/
  @ApiModelProperty(example = "null", value = "If true, then a new registration instance will be created if the client LMS doesn't provide launch data for an existing one. Otherwise, the same instance will always be used for the given cmi.learner_id. ")
  public Boolean getInstanced() {
    return instanced;
  }

  public void setInstanced(Boolean instanced) {
    this.instanced = instanced;
  }

  public DispatchSchema registrationCap(Integer registrationCap) {
    this.registrationCap = registrationCap;
    return this;
  }

   /**
   * The maximum number of registrations that can be created for this dispatch, where '0' means 'unlimited registrations'. 
   * @return registrationCap
  **/
  @ApiModelProperty(example = "null", value = "The maximum number of registrations that can be created for this dispatch, where '0' means 'unlimited registrations'. ")
  public Integer getRegistrationCap() {
    return registrationCap;
  }

  public void setRegistrationCap(Integer registrationCap) {
    this.registrationCap = registrationCap;
  }

  public DispatchSchema registrationCount(Integer registrationCount) {
    this.registrationCount = registrationCount;
    return this;
  }

   /**
   * The current number of registrations that have been created for this dispatch. 
   * @return registrationCount
  **/
  @ApiModelProperty(example = "null", value = "The current number of registrations that have been created for this dispatch. ")
  public Integer getRegistrationCount() {
    return registrationCount;
  }

  public void setRegistrationCount(Integer registrationCount) {
    this.registrationCount = registrationCount;
  }

  public DispatchSchema expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The date after which this dispatch will be disabled as an ISO 8601 string, or 'none' for no expiration date. 
   * @return expirationDate
  **/
  @ApiModelProperty(example = "null", value = "The date after which this dispatch will be disabled as an ISO 8601 string, or 'none' for no expiration date. ")
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public DispatchSchema tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public DispatchSchema addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The tags to associate with this Dispatch.
   * @return tags
  **/
  @ApiModelProperty(example = "null", value = "The tags to associate with this Dispatch.")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public DispatchSchema email(String email) {
    this.email = email;
    return this;
  }

   /**
   * SCORM Cloud user e-mail associated with this dispatch. If this is not provided, it will default to the owner of the Realm. 
   * @return email
  **/
  @ApiModelProperty(example = "null", value = "SCORM Cloud user e-mail associated with this dispatch. If this is not provided, it will default to the owner of the Realm. ")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public DispatchSchema notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Any provided notes about this dispatch.
   * @return notes
  **/
  @ApiModelProperty(example = "null", value = "Any provided notes about this dispatch.")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DispatchSchema dispatchSchema = (DispatchSchema) o;
    return Objects.equals(this.destinationId, dispatchSchema.destinationId) &&
        Objects.equals(this.courseId, dispatchSchema.courseId) &&
        Objects.equals(this.allowNewRegistrations, dispatchSchema.allowNewRegistrations) &&
        Objects.equals(this.enabled, dispatchSchema.enabled) &&
        Objects.equals(this.instanced, dispatchSchema.instanced) &&
        Objects.equals(this.registrationCap, dispatchSchema.registrationCap) &&
        Objects.equals(this.registrationCount, dispatchSchema.registrationCount) &&
        Objects.equals(this.expirationDate, dispatchSchema.expirationDate) &&
        Objects.equals(this.tags, dispatchSchema.tags) &&
        Objects.equals(this.email, dispatchSchema.email) &&
        Objects.equals(this.notes, dispatchSchema.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationId, courseId, allowNewRegistrations, enabled, instanced, registrationCap, registrationCount, expirationDate, tags, email, notes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DispatchSchema {\n");
    
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    allowNewRegistrations: ").append(toIndentedString(allowNewRegistrations)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    instanced: ").append(toIndentedString(instanced)).append("\n");
    sb.append("    registrationCap: ").append(toIndentedString(registrationCap)).append("\n");
    sb.append("    registrationCount: ").append(toIndentedString(registrationCount)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

