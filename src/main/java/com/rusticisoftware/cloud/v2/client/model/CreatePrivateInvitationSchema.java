/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.rusticisoftware.cloud.v2.client.model.InvitationEmailSchema;
import com.rusticisoftware.cloud.v2.client.model.PostBackSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * CreatePrivateInvitationSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-19T22:54:47.497-06:00")
public class CreatePrivateInvitationSchema {
  @JsonProperty("courseId")
  private String courseId = null;

  @JsonProperty("creatingUserEmail")
  private String creatingUserEmail = null;

  @JsonProperty("invitationEmail")
  private InvitationEmailSchema invitationEmail = null;

  @JsonProperty("postBack")
  private PostBackSchema postBack = null;

  @JsonProperty("expirationDate")
  private OffsetDateTime expirationDate = null;

  @JsonProperty("tags")
  private List<String> tags = new ArrayList<String>();

  public CreatePrivateInvitationSchema courseId(String courseId) {
    this.courseId = courseId;
    return this;
  }

   /**
   * The id of the course for which to create an invitation.
   * @return courseId
  **/
  @ApiModelProperty(example = "null", required = true, value = "The id of the course for which to create an invitation.")
  public String getCourseId() {
    return courseId;
  }

  public void setCourseId(String courseId) {
    this.courseId = courseId;
  }

  public CreatePrivateInvitationSchema creatingUserEmail(String creatingUserEmail) {
    this.creatingUserEmail = creatingUserEmail;
    return this;
  }

   /**
   * The email of the user who is creating the invitation.
   * @return creatingUserEmail
  **/
  @ApiModelProperty(example = "null", required = true, value = "The email of the user who is creating the invitation.")
  public String getCreatingUserEmail() {
    return creatingUserEmail;
  }

  public void setCreatingUserEmail(String creatingUserEmail) {
    this.creatingUserEmail = creatingUserEmail;
  }

  public CreatePrivateInvitationSchema invitationEmail(InvitationEmailSchema invitationEmail) {
    this.invitationEmail = invitationEmail;
    return this;
  }

   /**
   * Get invitationEmail
   * @return invitationEmail
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public InvitationEmailSchema getInvitationEmail() {
    return invitationEmail;
  }

  public void setInvitationEmail(InvitationEmailSchema invitationEmail) {
    this.invitationEmail = invitationEmail;
  }

  public CreatePrivateInvitationSchema postBack(PostBackSchema postBack) {
    this.postBack = postBack;
    return this;
  }

   /**
   * Specifies a URL for which to post activity and status data in real time as the course is completed
   * @return postBack
  **/
  @ApiModelProperty(example = "null", value = "Specifies a URL for which to post activity and status data in real time as the course is completed")
  public PostBackSchema getPostBack() {
    return postBack;
  }

  public void setPostBack(PostBackSchema postBack) {
    this.postBack = postBack;
  }

  public CreatePrivateInvitationSchema expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The date this invitation will expire and can not be launched (formatted yyyyMMddHHmmss in UTC time).
   * @return expirationDate
  **/
  @ApiModelProperty(example = "null", value = "The date this invitation will expire and can not be launched (formatted yyyyMMddHHmmss in UTC time).")
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public CreatePrivateInvitationSchema tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public CreatePrivateInvitationSchema addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Optional tags to be applied to this invitation.
   * @return tags
  **/
  @ApiModelProperty(example = "null", value = "Optional tags to be applied to this invitation.")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePrivateInvitationSchema createPrivateInvitationSchema = (CreatePrivateInvitationSchema) o;
    return Objects.equals(this.courseId, createPrivateInvitationSchema.courseId) &&
        Objects.equals(this.creatingUserEmail, createPrivateInvitationSchema.creatingUserEmail) &&
        Objects.equals(this.invitationEmail, createPrivateInvitationSchema.invitationEmail) &&
        Objects.equals(this.postBack, createPrivateInvitationSchema.postBack) &&
        Objects.equals(this.expirationDate, createPrivateInvitationSchema.expirationDate) &&
        Objects.equals(this.tags, createPrivateInvitationSchema.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(courseId, creatingUserEmail, invitationEmail, postBack, expirationDate, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePrivateInvitationSchema {\n");
    
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    creatingUserEmail: ").append(toIndentedString(creatingUserEmail)).append("\n");
    sb.append("    invitationEmail: ").append(toIndentedString(invitationEmail)).append("\n");
    sb.append("    postBack: ").append(toIndentedString(postBack)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

