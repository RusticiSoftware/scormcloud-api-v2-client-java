/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * DestinationSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-19T22:54:47.497-06:00")
public class DestinationSchema {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("tags")
  private List<String> tags = new ArrayList<String>();

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("notes")
  private String notes = null;

  public DestinationSchema name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The destination's name.
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "The destination's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DestinationSchema tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public DestinationSchema addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Optional array of tags.
   * @return tags
  **/
  @ApiModelProperty(example = "null", value = "Optional array of tags.")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public DestinationSchema email(String email) {
    this.email = email;
    return this;
  }

   /**
   * SCORM Cloud user e-mail associated with this destination. If this is not provided, it will default to the owner of the Realm. 
   * @return email
  **/
  @ApiModelProperty(example = "null", value = "SCORM Cloud user e-mail associated with this destination. If this is not provided, it will default to the owner of the Realm. ")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public DestinationSchema notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Any provided notes about this Destination
   * @return notes
  **/
  @ApiModelProperty(example = "null", value = "Any provided notes about this Destination")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinationSchema destinationSchema = (DestinationSchema) o;
    return Objects.equals(this.name, destinationSchema.name) &&
        Objects.equals(this.tags, destinationSchema.tags) &&
        Objects.equals(this.email, destinationSchema.email) &&
        Objects.equals(this.notes, destinationSchema.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, tags, email, notes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinationSchema {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

