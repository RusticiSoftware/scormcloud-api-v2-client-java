/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ScoreSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-11-05T13:19:45.469-05:00")
public class ScoreSchema {
  @JsonProperty("scaled")
  private Double scaled = null;

  public ScoreSchema scaled(Double scaled) {
    this.scaled = scaled;
    return this;
  }

  /**
   * Scaled score between 0 and 100
   * @return scaled
  **/
  @ApiModelProperty(value = "Scaled score between 0 and 100")
  public Double getScaled() {
    return scaled;
  }

  public void setScaled(Double scaled) {
    this.scaled = scaled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScoreSchema scoreSchema = (ScoreSchema) o;
    return Objects.equals(this.scaled, scoreSchema.scaled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scaled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScoreSchema {\n");
    
    sb.append("    scaled: ").append(toIndentedString(scaled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

