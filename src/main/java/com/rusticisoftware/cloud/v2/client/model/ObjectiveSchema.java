/**
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0 beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.rusticisoftware.cloud.v2.client.model.ScoreSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * ObjectiveSchema
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-25T23:15:50.683-05:00")
public class ObjectiveSchema   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("primary")
  private Boolean primary = null;

  @JsonProperty("score")
  private ScoreSchema score = null;

  @JsonProperty("scoreMax")
  private Double scoreMax = null;

  @JsonProperty("scoreMin")
  private Double scoreMin = null;

  @JsonProperty("scoreRaw")
  private Double scoreRaw = null;

  @JsonProperty("previousScoreScaled")
  private Double previousScoreScaled = null;

  @JsonProperty("firstScoreScaled")
  private Double firstScoreScaled = null;

  @JsonProperty("progressMeasure")
  private Double progressMeasure = null;

  @JsonProperty("firstSuccessTimeStamp")
  private String firstSuccessTimeStamp = null;

  /**
   * Gets or Sets objectiveCompletion
   */
  public enum ObjectiveCompletionEnum {
    UNKNOWN("UNKNOWN"),
    
    COMPLETED("COMPLETED"),
    
    INCOMPLETE("INCOMPLETE");

    private String value;

    ObjectiveCompletionEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectiveCompletionEnum fromValue(String text) {
      for (ObjectiveCompletionEnum b : ObjectiveCompletionEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("objectiveCompletion")
  private ObjectiveCompletionEnum objectiveCompletion = ObjectiveCompletionEnum.UNKNOWN;

  /**
   * Gets or Sets objectiveSuccess
   */
  public enum ObjectiveSuccessEnum {
    UNKNOWN("UNKNOWN"),
    
    PASSED("PASSED"),
    
    FAILED("FAILED");

    private String value;

    ObjectiveSuccessEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectiveSuccessEnum fromValue(String text) {
      for (ObjectiveSuccessEnum b : ObjectiveSuccessEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("objectiveSuccess")
  private ObjectiveSuccessEnum objectiveSuccess = ObjectiveSuccessEnum.UNKNOWN;

  /**
   * Gets or Sets previousObjectiveSuccess
   */
  public enum PreviousObjectiveSuccessEnum {
    UNKNOWN("UNKNOWN"),
    
    PASSED("PASSED"),
    
    FAILED("FAILED");

    private String value;

    PreviousObjectiveSuccessEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PreviousObjectiveSuccessEnum fromValue(String text) {
      for (PreviousObjectiveSuccessEnum b : PreviousObjectiveSuccessEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("previousObjectiveSuccess")
  private PreviousObjectiveSuccessEnum previousObjectiveSuccess = PreviousObjectiveSuccessEnum.UNKNOWN;

  public ObjectiveSchema id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ObjectiveSchema primary(Boolean primary) {
    this.primary = primary;
    return this;
  }

   /**
   * Get primary
   * @return primary
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getPrimary() {
    return primary;
  }

  public void setPrimary(Boolean primary) {
    this.primary = primary;
  }

  public ObjectiveSchema score(ScoreSchema score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @ApiModelProperty(example = "null", value = "")
  public ScoreSchema getScore() {
    return score;
  }

  public void setScore(ScoreSchema score) {
    this.score = score;
  }

  public ObjectiveSchema scoreMax(Double scoreMax) {
    this.scoreMax = scoreMax;
    return this;
  }

   /**
   * Get scoreMax
   * @return scoreMax
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getScoreMax() {
    return scoreMax;
  }

  public void setScoreMax(Double scoreMax) {
    this.scoreMax = scoreMax;
  }

  public ObjectiveSchema scoreMin(Double scoreMin) {
    this.scoreMin = scoreMin;
    return this;
  }

   /**
   * Get scoreMin
   * @return scoreMin
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getScoreMin() {
    return scoreMin;
  }

  public void setScoreMin(Double scoreMin) {
    this.scoreMin = scoreMin;
  }

  public ObjectiveSchema scoreRaw(Double scoreRaw) {
    this.scoreRaw = scoreRaw;
    return this;
  }

   /**
   * Get scoreRaw
   * @return scoreRaw
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getScoreRaw() {
    return scoreRaw;
  }

  public void setScoreRaw(Double scoreRaw) {
    this.scoreRaw = scoreRaw;
  }

  public ObjectiveSchema previousScoreScaled(Double previousScoreScaled) {
    this.previousScoreScaled = previousScoreScaled;
    return this;
  }

   /**
   * Get previousScoreScaled
   * @return previousScoreScaled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getPreviousScoreScaled() {
    return previousScoreScaled;
  }

  public void setPreviousScoreScaled(Double previousScoreScaled) {
    this.previousScoreScaled = previousScoreScaled;
  }

  public ObjectiveSchema firstScoreScaled(Double firstScoreScaled) {
    this.firstScoreScaled = firstScoreScaled;
    return this;
  }

   /**
   * Get firstScoreScaled
   * @return firstScoreScaled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getFirstScoreScaled() {
    return firstScoreScaled;
  }

  public void setFirstScoreScaled(Double firstScoreScaled) {
    this.firstScoreScaled = firstScoreScaled;
  }

  public ObjectiveSchema progressMeasure(Double progressMeasure) {
    this.progressMeasure = progressMeasure;
    return this;
  }

   /**
   * Get progressMeasure
   * @return progressMeasure
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getProgressMeasure() {
    return progressMeasure;
  }

  public void setProgressMeasure(Double progressMeasure) {
    this.progressMeasure = progressMeasure;
  }

  public ObjectiveSchema firstSuccessTimeStamp(String firstSuccessTimeStamp) {
    this.firstSuccessTimeStamp = firstSuccessTimeStamp;
    return this;
  }

   /**
   * Get firstSuccessTimeStamp
   * @return firstSuccessTimeStamp
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFirstSuccessTimeStamp() {
    return firstSuccessTimeStamp;
  }

  public void setFirstSuccessTimeStamp(String firstSuccessTimeStamp) {
    this.firstSuccessTimeStamp = firstSuccessTimeStamp;
  }

  public ObjectiveSchema objectiveCompletion(ObjectiveCompletionEnum objectiveCompletion) {
    this.objectiveCompletion = objectiveCompletion;
    return this;
  }

   /**
   * Get objectiveCompletion
   * @return objectiveCompletion
  **/
  @ApiModelProperty(example = "null", value = "")
  public ObjectiveCompletionEnum getObjectiveCompletion() {
    return objectiveCompletion;
  }

  public void setObjectiveCompletion(ObjectiveCompletionEnum objectiveCompletion) {
    this.objectiveCompletion = objectiveCompletion;
  }

  public ObjectiveSchema objectiveSuccess(ObjectiveSuccessEnum objectiveSuccess) {
    this.objectiveSuccess = objectiveSuccess;
    return this;
  }

   /**
   * Get objectiveSuccess
   * @return objectiveSuccess
  **/
  @ApiModelProperty(example = "null", value = "")
  public ObjectiveSuccessEnum getObjectiveSuccess() {
    return objectiveSuccess;
  }

  public void setObjectiveSuccess(ObjectiveSuccessEnum objectiveSuccess) {
    this.objectiveSuccess = objectiveSuccess;
  }

  public ObjectiveSchema previousObjectiveSuccess(PreviousObjectiveSuccessEnum previousObjectiveSuccess) {
    this.previousObjectiveSuccess = previousObjectiveSuccess;
    return this;
  }

   /**
   * Get previousObjectiveSuccess
   * @return previousObjectiveSuccess
  **/
  @ApiModelProperty(example = "null", value = "")
  public PreviousObjectiveSuccessEnum getPreviousObjectiveSuccess() {
    return previousObjectiveSuccess;
  }

  public void setPreviousObjectiveSuccess(PreviousObjectiveSuccessEnum previousObjectiveSuccess) {
    this.previousObjectiveSuccess = previousObjectiveSuccess;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectiveSchema objectiveSchema = (ObjectiveSchema) o;
    return Objects.equals(this.id, objectiveSchema.id) &&
        Objects.equals(this.primary, objectiveSchema.primary) &&
        Objects.equals(this.score, objectiveSchema.score) &&
        Objects.equals(this.scoreMax, objectiveSchema.scoreMax) &&
        Objects.equals(this.scoreMin, objectiveSchema.scoreMin) &&
        Objects.equals(this.scoreRaw, objectiveSchema.scoreRaw) &&
        Objects.equals(this.previousScoreScaled, objectiveSchema.previousScoreScaled) &&
        Objects.equals(this.firstScoreScaled, objectiveSchema.firstScoreScaled) &&
        Objects.equals(this.progressMeasure, objectiveSchema.progressMeasure) &&
        Objects.equals(this.firstSuccessTimeStamp, objectiveSchema.firstSuccessTimeStamp) &&
        Objects.equals(this.objectiveCompletion, objectiveSchema.objectiveCompletion) &&
        Objects.equals(this.objectiveSuccess, objectiveSchema.objectiveSuccess) &&
        Objects.equals(this.previousObjectiveSuccess, objectiveSchema.previousObjectiveSuccess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, primary, score, scoreMax, scoreMin, scoreRaw, previousScoreScaled, firstScoreScaled, progressMeasure, firstSuccessTimeStamp, objectiveCompletion, objectiveSuccess, previousObjectiveSuccess);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectiveSchema {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    primary: ").append(toIndentedString(primary)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    scoreMax: ").append(toIndentedString(scoreMax)).append("\n");
    sb.append("    scoreMin: ").append(toIndentedString(scoreMin)).append("\n");
    sb.append("    scoreRaw: ").append(toIndentedString(scoreRaw)).append("\n");
    sb.append("    previousScoreScaled: ").append(toIndentedString(previousScoreScaled)).append("\n");
    sb.append("    firstScoreScaled: ").append(toIndentedString(firstScoreScaled)).append("\n");
    sb.append("    progressMeasure: ").append(toIndentedString(progressMeasure)).append("\n");
    sb.append("    firstSuccessTimeStamp: ").append(toIndentedString(firstSuccessTimeStamp)).append("\n");
    sb.append("    objectiveCompletion: ").append(toIndentedString(objectiveCompletion)).append("\n");
    sb.append("    objectiveSuccess: ").append(toIndentedString(objectiveSuccess)).append("\n");
    sb.append("    previousObjectiveSuccess: ").append(toIndentedString(previousObjectiveSuccess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

