/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rusticisoftware.cloud.v2.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.rusticisoftware.cloud.v2.client.model.CourseActivitySchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * CourseActivitySchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-09-26T11:33:06.485-05:00")
public class CourseActivitySchema {
  @JsonProperty("externalIdentifier")
  private String externalIdentifier = null;

  @JsonProperty("itemIdentifier")
  private String itemIdentifier = null;

  @JsonProperty("resourceIdentifier")
  private String resourceIdentifier = null;

  /**
   * The type of activity this is
   */
  public enum ActivityTypeEnum {
    UNKNOWN("UNKNOWN"),
    
    AGGREGATION("AGGREGATION"),
    
    SCO("SCO"),
    
    ASSET("ASSET"),
    
    OBJECTIVE("OBJECTIVE");

    private String value;

    ActivityTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActivityTypeEnum fromValue(String value) {
      for (ActivityTypeEnum b : ActivityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("activityType")
  private ActivityTypeEnum activityType = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("scaledPassingScore")
  private String scaledPassingScore = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("children")
  private List<CourseActivitySchema> children = null;

  public CourseActivitySchema externalIdentifier(String externalIdentifier) {
    this.externalIdentifier = externalIdentifier;
    return this;
  }

  /**
   * An arbitrary identifier that the external LMS system can associate with this LearningObject to track it as it is reused across courses 
   * @return externalIdentifier
  **/
  @ApiModelProperty(value = "An arbitrary identifier that the external LMS system can associate with this LearningObject to track it as it is reused across courses ")
  public String getExternalIdentifier() {
    return externalIdentifier;
  }

  public void setExternalIdentifier(String externalIdentifier) {
    this.externalIdentifier = externalIdentifier;
  }

  public CourseActivitySchema itemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
    return this;
  }

  /**
   * The string which identifies this activity in the context of its course
   * @return itemIdentifier
  **/
  @ApiModelProperty(value = "The string which identifies this activity in the context of its course")
  public String getItemIdentifier() {
    return itemIdentifier;
  }

  public void setItemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
  }

  public CourseActivitySchema resourceIdentifier(String resourceIdentifier) {
    this.resourceIdentifier = resourceIdentifier;
    return this;
  }

  /**
   * The string which identifies this activity&#39;s resource in a course&#39;s manifest
   * @return resourceIdentifier
  **/
  @ApiModelProperty(value = "The string which identifies this activity's resource in a course's manifest")
  public String getResourceIdentifier() {
    return resourceIdentifier;
  }

  public void setResourceIdentifier(String resourceIdentifier) {
    this.resourceIdentifier = resourceIdentifier;
  }

  public CourseActivitySchema activityType(ActivityTypeEnum activityType) {
    this.activityType = activityType;
    return this;
  }

  /**
   * The type of activity this is
   * @return activityType
  **/
  @ApiModelProperty(value = "The type of activity this is")
  public ActivityTypeEnum getActivityType() {
    return activityType;
  }

  public void setActivityType(ActivityTypeEnum activityType) {
    this.activityType = activityType;
  }

  public CourseActivitySchema href(String href) {
    this.href = href;
    return this;
  }

  /**
   * The web path used to launch this activity
   * @return href
  **/
  @ApiModelProperty(value = "The web path used to launch this activity")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public CourseActivitySchema scaledPassingScore(String scaledPassingScore) {
    this.scaledPassingScore = scaledPassingScore;
    return this;
  }

  /**
   * The score required of a learner to pass this activity
   * @return scaledPassingScore
  **/
  @ApiModelProperty(value = "The score required of a learner to pass this activity")
  public String getScaledPassingScore() {
    return scaledPassingScore;
  }

  public void setScaledPassingScore(String scaledPassingScore) {
    this.scaledPassingScore = scaledPassingScore;
  }

  public CourseActivitySchema title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The title of the activity
   * @return title
  **/
  @ApiModelProperty(value = "The title of the activity")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CourseActivitySchema children(List<CourseActivitySchema> children) {
    this.children = children;
    return this;
  }

  public CourseActivitySchema addChildrenItem(CourseActivitySchema childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

  /**
   * Get children
   * @return children
  **/
  @ApiModelProperty(value = "")
  public List<CourseActivitySchema> getChildren() {
    return children;
  }

  public void setChildren(List<CourseActivitySchema> children) {
    this.children = children;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CourseActivitySchema courseActivitySchema = (CourseActivitySchema) o;
    return Objects.equals(this.externalIdentifier, courseActivitySchema.externalIdentifier) &&
        Objects.equals(this.itemIdentifier, courseActivitySchema.itemIdentifier) &&
        Objects.equals(this.resourceIdentifier, courseActivitySchema.resourceIdentifier) &&
        Objects.equals(this.activityType, courseActivitySchema.activityType) &&
        Objects.equals(this.href, courseActivitySchema.href) &&
        Objects.equals(this.scaledPassingScore, courseActivitySchema.scaledPassingScore) &&
        Objects.equals(this.title, courseActivitySchema.title) &&
        Objects.equals(this.children, courseActivitySchema.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalIdentifier, itemIdentifier, resourceIdentifier, activityType, href, scaledPassingScore, title, children);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CourseActivitySchema {\n");
    
    sb.append("    externalIdentifier: ").append(toIndentedString(externalIdentifier)).append("\n");
    sb.append("    itemIdentifier: ").append(toIndentedString(itemIdentifier)).append("\n");
    sb.append("    resourceIdentifier: ").append(toIndentedString(resourceIdentifier)).append("\n");
    sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    scaledPassingScore: ").append(toIndentedString(scaledPassingScore)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

